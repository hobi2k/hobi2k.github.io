---
layout: post
title:  "[ML Project] CatBoost와 SMOTE를 활용한 포르투갈 은행 정기 예금 가입 예측"
date:   2025-10-22 10:43:22 +0900
categories: ML
---



## 프로젝트 개요

**Bank Marketing Dataset**을 기반으로  
고객의 정기 예금(`term deposit`) 가입 여부를 예측하는 머신러닝 프로젝트입니다.

데이터 출처
Moro, S., Cortez, P., & Rita, P. (2014). A Data-Driven Approach to Predict the Success of Bank Telemarketing. Decision Support Systems, In press, http://dx.doi.org/10.1016/j.dss.2014.03.001

데이터는 심한 **클래스 불균형(Class Imbalance)** 을 포함하고 있어,  이를 해결하기 위한 다양한 방법(`class_weights`, `SMOTE`, `Optuna`, `Threshold Tuning`)을 시도했습니다.

---

## 문제 정의

### 목표
- 고객 데이터(`job`, `education`, `contact`, `poutcome` 등)를 이용해 예금 가입 여부(`y`)를 예측  
- **F1-score** 및 **Recall**을 중점으로 개선

### 문제점
- 가입 고객(`y=1`) 비율이 11% 수준 → 불균형 심함  
- 경제 지표 변수(`euribor3m`, `emp.var.rate`)는 예측에 불필요한 노이즈로 작용

---

## 데이터 탐색 (EDA)

### 수치형 변수 상관관계

![](\assets\1023m3\corr_heatmap.png)

- `emp.var.rate`와 `euribor3m`의 높은 상관관계 확인  
- 거시경제 변수가 개인 예측에 방해될 수 있어 제거 예정

---

### 연령대별 가입 추세

![](\assets/1023m3/age_group_bar.png)

- 30~50대가 주요 가입층  
- 60대 이상 구간은 이상치적 집중도 → 고령층 특화 모델 고려 필요할 수도?

---

### 범주형 변수별 가입률

![](\assets/1023m3/category_bars.png)
![](\assets/1023m3/category_bars1.png)
![](\assets/1023m3/category_bars2.png)
![](\assets/1023m3/category_bars3.png)

| 변수 | 인사이트 |
|------|-----------|
| `contact` | `cellular` 사용 시 가입 확률 상승 |
| `poutcome` | 과거 캠페인 성공(`success`) 고객은 재가입률 높음 |
| `default` | 신용불량(`yes`) 고객은 가입 전무 |

---

## 데이터 전처리

### 제거 변수
| 변수명 | 이유 |
|--------|------|
| `duration` | 예측 시점에 알 수 없음 |
| `emp.var.rate` | 거시경제 변수 |
| `euribor3m` | 거시경제 변수 | 
| `cons.price.idx` | 거시경제 변수 |
| `nr.employed` | 거시경제 변수 |
| `day_of_week` | 내부 일정 요인 |

### 범주형 인코딩
`OrdinalEncoder`로 모든 범주형 변수를 숫자형으로 변환.

---

## 모델링

### 후보 모델
- **XGBoost**
- **CatBoost**

GridSearchCV로 하이퍼파라미터를 탐색한 결과,  
CatBoost가 미세하지만 좀 더 높은 F1-score를 보임.

---

## XGBoost 결과

| Metric | Score |
|---------|-------|
| Accuracy | 0.90 |
| Recall | 0.32 |
| F1 | 0.40 |

과적합은 아니지만 클래스 불균형 증상이 뚜렷함.

---

## CatBoost 결과

| Metric | Score |
|---------|-------|
| Accuracy | 0.90 |
| Recall | 0.35 |
| F1 | 0.43 |

XGBoost 대비 소폭 개선되었으나, 여전히 Recall이 낮음.

---

## Optuna를 통한 하이퍼파라미터 최적화

- 탐색 파라미터  

```python
# CatBoost를 위한 목적 함수 정의
def objective(trial):
    # 클래스별 데이터 세기
    w0 = len(y_ctrain[y_ctrain == 0])
    w1 = len(y_ctrain[y_ctrain == 1])
    params = {
        # optuna의 suggest_in와 suggest_float로 범위 지정: name, low, high, step
        'depth': trial.suggest_int('depth', 4, 10), # 트리 깊이
        'learning_rate': trial.suggest_float('learning_rate', 0.01, 0.3), # 학습률 찾기
        'iterations': trial.suggest_int('iterations', 200, 1000), # 트리 개수
        'l2_leaf_reg': trial.suggest_float('l2_leaf_reg', 1, 10), # l2 규제
        'class_weights': [1.0, w0 / w1],  # 0번 클래스 가중치=1.0, 1번 클래스 가중치=w0/w1로 설정
        'random_state': 42,
        'verbose': False,
        'eval_metric': 'F1' # 평가 로그를 F1로 설정
    }
    model = CatBoostClassifier(**params)

    model.fit(x_ctrain, y_ctrain, eval_set=[(x_cval, y_cval)],) # eval_set로 검증 데이터를 넣어 학습 중 검증
    y_pred = model.predict(x_cval)
    return f1_score(y_cval, y_pred)

# Optuna 스터디 생성 및 최적화 실행
study = optuna.create_study(direction='maximize') # f1을 maximize하는 방향으로 설정
# 시도 횟수 n_trials = 50번
study.optimize(objective, n_trials=100)

print(f"CatBoost: 최적의 값 = {study.best_value}\n최적의 파라미터 = {study.best_params}")
print("Best trial:\n\n")
trial = study.best_trial

print("Value: ", trial.value)
print("Params: ")
for key, value in trial.params.items():
    print(f"{key}: {value}")
```

 **최적 조합**
 depth=8, learning_rate=0.27, iterations=924, l2_leaf_reg=4.38
F1 ≈ 0.43

---

## SMOTE + TomekLinks 적용

소수 클래스 오버샘플링 + 노이즈 샘플 제거로 데이터 균형화.

```python
from imblearn.combine import SMOTETomek
smt = SMOTETomek(random_state=42)
X_res, y_res = smt.fit_resample(x_ctrain, y_ctrain)
```
---

## Threshold Tuning

다양한 임계값에서 F1, Recall, Precision 비교

- Best Threshold = 0.33
  - F1 = 0.67
  - Recall = 0.67
  - Accuracy = 0.87

![](\assets/1023m3/importance.png)

  | 변수          | 중요도 해석       |
| ----------- | ------------ |
| `poutcome`  | 과거 캠페인 성공 여부 |
| `contact`   | 연락 방식        |
| `housing`   | 대출 여부        |
| `job_class` | 직업군          |
| `education` | 교육 수준        |

---

##  결론

- **과거 캠페인 성공 경험(poutcome)**이 가입 예측에 큰 영향
- **연락 채널(contact)**은 성과 차이를 크게 만듦(cellular ≫ 기타)
- **대출 여부(housing)**도 영향
- **직업군(job_class)와 교육 수준(education)** 또한 적지 않은 영향
- 기존 캠페인 성공 고객을 리타겟팅
- 신규 고객 유입 전략 필요